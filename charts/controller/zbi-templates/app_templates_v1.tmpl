{{define "VOLUME"}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{.VolumeName}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
spec:
  accessModes:
    - ReadWriteOnce
{{- if .StorageClass}}
  storageClassName: {{.StorageClass}}
{{- end}}
{{- if eq .DataSourceType "pvc" }}
  dataSource:
    name: {{.SourceName}}
    kind: PersistentVolumeClaim
{{- else if eq .DataSourceType "snapshot" }}
  dataSource:
    name: {{.SourceName}}
    kind: VolumeSnapshot
    apiGroup: snapshot.storage.k8s.io
{{- end}}
  resources:
    requests:
      storage: {{.Size}}
{{end}}

{{define "SNAPSHOT"}}
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshot
metadata:
  name: {{.SnapshotName}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
spec:
  volumeSnapshotClassName: {{.SnapshotClass}}
  source:
    persistentVolumeClaimName: {{.VolumeName}}
{{end}}

{{define "SCHEDULE_SNAPSHOT"}}
apiVersion: snapscheduler.backube/v1
kind: SnapshotSchedule
metadata:
  name: {{.ScheduleName}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
spec:
  claimSelector:
    matchLabels:
      {{- range $key, $value := .Labels}}
      {{$key}}: {{$value}}
      {{- end}}
  disabled: false
  retention:
    expires: "{{.BackupExpiration}}"
    maxCount: {{.MaxBackupCount}}
  schedule: "{{.Schedule}}"
  snapshotTemplate:
    labels:
      {{- range $key, $value := .Labels}}
      {{$key}}: {{$value}}
      {{- end}}
      name: {{.ScheduleName}}
      schedule: {{.ScheduleType}}
    snapshotClassName: {{.SnapshotClass}}
{{end}}
