{{define "ZCASH_CONF"}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: zcash-conf-{{.Name}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
data:
  zcash.conf: |
    {{- range $index, $item := .Properties.ZcashConf}}
    {{$item.Key}}={{$item.Value}}
    {{- end}}
  request: |
    {{.Properties.Request}}
{{end}}

{{define "ENVOY_CONF"}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-proxy-conf-{{.Name}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: {{.Envoy.Port}}

        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              use_remote_address: true
              skip_xff_append: false
              xff_num_trusted_hops: 0
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: service
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    request_headers_to_add:
                    - header:
                        key: "Authorization"
                        value: "Basic {{basicCredentials .Properties.Username .Properties.Password}}"
                      append: false
                    route:
                      cluster: zcash
                      #prefix_rewrite: "/"
              http_filters:
{{- if .Envoy.AccessAuthorization}}
              - name: envoy.filters.http.ext_authz
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  transport_api_version: V3
                  grpc_service:
                    envoy_grpc:
                      cluster_name: ext-authz
                    timeout: {{.Envoy.Timeout}}s
                  with_request_body:
                    max_request_bytes: 8192
                    allow_partial_message: true
                    pack_as_bytes: true
                  failure_mode_allow: false
{{- end}}
              - name: envoy.filters.http.router
                typed_config: {}

      clusters:
      - name: zcash
        connect_timeout: {{.Envoy.Timeout}}s
        type: strict_dns
        load_assignment:
          cluster_name: zcash
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: {{.Ports.Zcash}}
{{- if .Envoy.AccessAuthorization}}
      - name: ext-authz
        connect_timeout: {{.Envoy.Timeout}}s
        type: strict_dns
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options: {}
        load_assignment:
          cluster_name: ext-authz
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{.Envoy.AuthServerURL}}
                    port_value: {{.Envoy.AuthServerPort}}
{{- end}}
{{end}}

{{define "CREDENTIALS"}}
apiVersion: v1
kind: Secret
metadata:
  name: credentials-{{.Name}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
data:
  username: {{base64Encode .Properties.Username}}
  password: {{base64Encode .Properties.Password}}
{{end}}

{{define "DEPLOYMENT"}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zcash-node-{{.Name}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
    app: zcashd
  annotations:
    configmap.reloader.stakater.com/reload: "zcash-conf-{{.Name}},envoy-proxy-conf-{{.Name}}"
    secret.reloader.stakater.com/reload: "credentials-{{.Name}}"
spec:
  selector:
    matchLabels:
      {{- range $key, $value := .Labels}}
      {{$key}}: {{$value}}
      {{- end}}
      app: zcashd
  template:
    metadata:
      labels:
        {{- range $key, $value := .Labels}}
        {{$key}}: {{$value}}
        {{- end}}
        app: zcashd
    spec:
      serviceAccountName: {{.ServiceAccountName}}
      securityContext:
        runAsUser: 2001
        runAsGroup: 2001
        fsGroup: 2001
      volumes:
      - name: zcash-client
        emptyDir: {}
      - name: zcash-conf
        configMap:
          name: zcash-conf-{{.Name}}
      - name: envoy-proxy-conf
        configMap:
          name: envoy-proxy-conf-{{.Name}}
# - TODO add support for ephemeral volume
#
      - name: zcash-data
        persistentVolumeClaim:
          claimName: {{.DataVolumeName}}
      initContainers:
      - name: init
        volumeMounts:
        - name: zcash-conf
          mountPath: /workspace/zcashconf
        - name: zcash-data
          mountPath: /srv/zcashd/.zcash
          subPath: .zcash
        - name: zcash-client
          mountPath: /etc/zcashd
        image: busybox
        command: ["sh", "-c", "cp /workspace/zcashconf/zcash.conf /srv/zcashd/.zcash/zcash.conf ; touch /etc/zcashd/zcash.conf && chown -R 2001:2001 /srv/zcashd"]
        securityContext:
          runAsUser: 0
          allowPrivilegeEscalation: true
      containers:
      - name: node
        image: {{.Images.Zcash}}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "zcash-cli -rpcuser=$(ZCASHD_RPCUSER) -rpcpassword=$(ZCASHD_RPCPASSWORD) stop"]
        env:
        - name: ZCASHD_RPCUSER
          valueFrom:
            secretKeyRef:
              name: credentials-{{.Name}}
              key: username
        - name: ZCASHD_RPCPASSWORD
          valueFrom:
            secretKeyRef:
              name: credentials-{{.Name}}
              key: password
        resources:
          limits:
            memory: "8Gi"
            cpu: "2"
# TODO - add memory and cpu requests
#
        volumeMounts:
        - name: zcash-conf
          mountPath: /workspace/zcashconf
        - name: zcash-data
          mountPath: /srv/zcashd/.zcash
          subPath: .zcash
        - name: zcash-data
          mountPath: /srv/zcashd/.zcash-params
          subPath: .zcash-params
        - name: zcash-client
          mountPath: /etc/zcashd
        ports:
        - name: json-rpc
          containerPort: {{.Ports.Zcash}}
      - name: metrics
        image: {{.Images.Metrics}}
        command:
        - zcashd_exporter
        args:
        - --web.listen-address=:{{.Ports.Metrics}}
        - --rpc.port={{.Ports.Zcash}}
        - --rpc.user=$(ZCASHD_RPCUSER)
        - --rpc.password=$(ZCASHD_RPCPASSWORD)
        - --zcash.conf.path=/etc/zcashd/zcash.conf
        env:
        - name: ZCASHD_RPCUSER
          valueFrom:
            secretKeyRef:
              name: credentials-{{.Name}}
              key: username
        - name: ZCASHD_RPCPASSWORD
          valueFrom:
            secretKeyRef:
              name: credentials-{{.Name}}
              key: password
        # resources:
        #   limits:
        #     memory: "64Mi"
        #     cpu: "250m"
        volumeMounts:
        - name: zcash-client
          mountPath: /etc/zcashd
        ports:
        - name: metrics-http
          containerPort: {{.Ports.Metrics}}
      - name: envoy
        image: {{.Envoy.Image}}
        command: {{.Envoy.Command}}
        ports:
          - name: json-rpc-proxy
            containerPort: {{.Envoy.Port}}
            protocol: TCP
        volumeMounts:
          - name: envoy-proxy-conf
            mountPath: "/etc/envoy"
            readOnly: true
{{end}}

{{define "SERVICE"}}
apiVersion: v1
kind: Service
metadata:
  name: zcashd-svc-{{.Name}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
spec:
  selector:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
    app: zcashd
  ports:
    - name: json-rpc
      port: {{.Ports.Zcash}}
      targetPort: {{.Ports.Zcash}}
    - name: metrics-http
      port: {{.Ports.Metrics}}
      targetPort: {{.Ports.Metrics}}
    - name: json-rpc-proxy
      port: {{.Envoy.Port}}
      targetPort: {{.Envoy.Port}}
{{end}}

{{define "INGRESS"}}
{
  "conditions": [{"prefix": "/{{.Name}}"}],
  "services": [{"name": "zcashd-svc-{{.Name}}","port": {{.Envoy.Port}}}],
  "pathRewritePolicy": {"replacePrefix": [{"replacement": "/"}]}
}
{{end}}

{{define "INGRESS_STOPPED"}}
{
  "conditions": [{"prefix": "/{{.Name}}"}],
  "services": [{"name": "project-svc","port": 8080}],
  "pathRewritePolicy": {"replacePrefix": [{"replacement": "/stopped"}]}
}
{{end}}
